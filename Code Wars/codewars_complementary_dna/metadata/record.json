{
  "id" : "554e4a2f232cdd87d9000038",
  "name" : "Complementary DNA",
  "slug" : "complementary-dna",
  "url" : "https://www.codewars.com/kata/554e4a2f232cdd87d9000038",
  "category" : "reference",
  "languages" : [ "python", "javascript", "ruby", "coffeescript", "java", "haskell", "cpp", "csharp", "crystal", "php", "shell", "rust", "typescript", "clojure", "c", "go", "nasm", "kotlin", "julia", "prolog", "elixir", "r", "scala", "cobol", "d", "sql" ],
  "path" : "/projects/652d35188462b20abea06327/",
  "selectedLanguage" : "python",
  "description" : "Deoxyribonucleic acid (DNA) is a chemical found in the nucleus of cells and carries the \"instructions\" for the development and functioning of living organisms.\n\nIf you want to know more: http://en.wikipedia.org/wiki/DNA\n\nIn DNA strings, symbols \"A\" and \"T\" are complements of each other, as \"C\" and \"G\". \nYour function receives one side of the DNA (string, except for Haskell); you need to return the other complementary side. DNA strand is never empty or there is no DNA at all (again, except for Haskell).\n\nMore similar exercise are found here: http://rosalind.info/problems/list-view/ (source)\n\nExample: (**input --> output**)\n~~~if-not:haskell\n```\n\"ATTGC\" --> \"TAACG\"\n\"GTAT\" --> \"CATA\"\n```\n~~~\n```if:haskell\ndnaStrand []        `shouldBe` []\ndnaStrand [A,T,G,C] `shouldBe` [T,A,C,G]\ndnaStrand [G,T,A,T] `shouldBe` [C,A,T,A]\ndnaStrand [A,A,A,A] `shouldBe` [T,T,T,T]\n```\n",
  "rank" : {
    "id" : -7,
    "name" : "7 kyu",
    "color" : "white"
  },
  "tags" : [ "Strings", "Fundamentals" ],
  "workUrl" : "https://www.codewars.com/kata/554e4a2f232cdd87d9000038/train/python",
  "completed" : false
}